/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author gb346159
 */
import javax.swing.*;
import java.awt.*;
import java.util.*;
public class GestionJoueurs extends javax.swing.JFrame {

    /**
     * Creates new form GestionJoueurs
     */
    private ArrayList<Joueur> lst;
    public GestionJoueurs() 
    {
        initComponents(); // Construction de l'interface
        lst=new ArrayList<Joueur>(); // Allocation de la liste de Joueurs
        DefaultListModel mod = new DefaultListModel(); // Création du modèle de la JList
        ListeJoueurs.setModel(mod); // Affectation du modèle à la liste
        initJoueurs(); // Initalisation des joueurs
        initListeJoueurs(); // Initalisation de la liste des joueurs
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListeJoueurs = new javax.swing.JList<>();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        AjoutJoueur = new javax.swing.JMenuItem();
        ModifJoueur = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Liste des joueurs");
        jPanel1.add(jLabel1);

        getContentPane().add(jPanel1, java.awt.BorderLayout.NORTH);

        jPanel2.setLayout(new java.awt.GridLayout(1, 1));

        ListeJoueurs.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        ListeJoueurs.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ListeJoueurs.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ListeJoueursValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(ListeJoueurs);

        jPanel2.add(jScrollPane1);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        jMenu1.setText("File");

        AjoutJoueur.setText("Ajouter un joueur");
        AjoutJoueur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AjoutJoueurActionPerformed(evt);
            }
        });
        jMenu1.add(AjoutJoueur);

        ModifJoueur.setText("Modifier un joueur");
        jMenu1.add(ModifJoueur);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ListeJoueursValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ListeJoueursValueChanged
        int ind= ListeJoueurs.getSelectedIndex();
        Joueur j= lst.get(ind);
        // appel de la boîte de dialogue de visualisation du joueur, le joueur à décrire dans la boîte de dialogue est passé en 3ème paramètre du constructeur de la boîte de dialogue, il s’agit ici de l’objet j (de type Joueur)
        VisuJoueurDlg diag = new VisuJoueurDlg(this,true,j);
        diag.setSize(600, 500);
        diag.setLocation(100,100);
        diag.setVisible(true); 
    }//GEN-LAST:event_ListeJoueursValueChanged

    private void AjoutJoueurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AjoutJoueurActionPerformed
       AjoutJoueurDlg diag= new AjoutJoueurDlg(this, true);// déclaration et creation de la boîte de dialogue
        diag.setVisible(true);  // affichage de la boîte de dialogue
        if(diag.getOk() == true ) // test de l’indicateur de fermeture 
        {
            Joueur j = diag.getJoueur(); // récupération du joueur qui a été saisi dans la boite
            lst.add(j);
            DefaultListModel list = (DefaultListModel)ListeJoueurs.getModel();
            list.addElement(j.getPseudo());
        }
        
    }//GEN-LAST:event_AjoutJoueurActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionJoueurs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionJoueurs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionJoueurs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionJoueurs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestionJoueurs().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem AjoutJoueur;
    private javax.swing.JList<String> ListeJoueurs;
    private javax.swing.JMenuItem ModifJoueur;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void initJoueurs() 
    {
       Joueur j= new Joueur("Lara"); // Création du joueur
        j.setSolde((double)100.0); // Affectation d'un solde de 100
        j.setCouleur(new Color(255,215,0)); // Affectation d'une couleur
        j.setPhoto(new ImageIcon(getClass().getResource("/lara.jpg")).getImage()); // Affectation d'une image
        lst.add(j); // Ajout du joueur à l'ArrayList
        Joueur novj = new Joueur("Jack"); // idem
        novj.setCouleur(new Color(0,128,128));
        novj.setSolde((double)100.0);
        novj.setPhoto(new ImageIcon(getClass().getResource("/jack.png")).getImage());
        lst.add(novj);
    }
    
    public Joueur getDefaultJoueur1()
    {
        return lst.get(0);
    }
    
    public Joueur getDefaultJoueur2()
    {
        return lst.get(1);
    }
    
    private void initListeJoueurs() 
    {
        DefaultListModel mod=(DefaultListModel)  ListeJoueurs.getModel(); // Récupération du modèle de la JList
        for (int i=0; i<lst.size(); i++) // Pour chaque Joueur dans l'ArrayList...
            mod.addElement(lst.get(i).getPseudo()); //..on ajoute le pseudo du Joueur à la JList
    }
}
